#include "s21_math.h"
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

#test floor_1
    double x=0.0;
    ck_assert_ldouble_eq(s21_floor(0), floorl(0));

#test floor_2
    double x=1.0;
    ck_assert_ldouble_eq(s21_floor(x), floorl(x));

#test floor_3
    double x=S21_INF;
    ck_assert_double_infinite(s21_floor(x));
//    ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);

#test floor_4
    double x=S21_NAN;
    ck_assert_ldouble_nan(s21_floor(x));
    // ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);

#test floor_5
    double x;
    for (x = 1; x < 100; x *= (x+1)) {
    ck_assert_ldouble_eq(s21_floor(x), floorl(x));
    }

#test floor_6
    double x;
    for (x = -1; x > -1e+16; x *=M_PI) {
//        ck_assert_ldouble_eq_tol(s21_floor(x), floor(x), S21_EPS_TEST);
        ck_assert_ldouble_eq(s21_floor(x), floorl(x));

    }

#test floor_7
    double x;
    for (x = 1; x > S21_EPS_TEST; x /=(0.5*M_PI)) {
        ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);
    }

#test floor_8
    double x=-0;
    ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);

#test floor_9
    double x;
    for (x = 4.0000000004; x > 3.9999042672; x -=0.000000011) {
        ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);
    }

#test floor_10
    double x;
    for (x = -4.0000000004; x > -3.9999042672; x +=0.000000011) {
        ck_assert_ldouble_eq_tol(s21_floor(x), floorl(x), S21_EPS_TEST);
    }