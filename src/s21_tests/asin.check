#include "s21_math.h"
#include <math.h>
#include <stdio.h>
#include <stdlib.h>




#test asin_1
    double x=0;
    ck_assert_double_lt(fabsl(s21_asin(x) - asinl(x)), S21_EPS_TEST);

#test asin_2
    double x=1;
    ck_assert_double_lt(fabsl(s21_asin(x) - asinl(x)), S21_EPS_TEST);

#test asin_3
    double x=S21_INF;
    ck_assert_double_nan(s21_asin(x));
    // ck_assert_ldouble_tol(s21_asin(x), asinl(x), S21_EPS_TEST);

#test asin_4
    double x=S21_NAN;
    ck_assert_ldouble_nan(s21_asin(x));
//    ck_assert_double_tol(s21_asin(x), asinl(x), S21_EPS_TEST);

#test asin_5
    double x;
//    char s21_res[5];
//    char res[5];
//    for (x = 1; x < 100; x *= (x+1)) {
//        sprintf(s21_res, "%.6ld", s21_asin(x));
//        sprintf(res, "%.6ld", asin(x));
//        ck_assert_pstr_eq(s21_res, res);

    long double y;
    for (y = 0.999999; y > S21_EPS_TEST; y /= 1.1) {
        //printf("[%L.20f]\n", x);
        ck_assert_double_lt(fabsl(s21_asin(y) - asinl(y)), S21_EPS_TEST);
    }

#test asin_6
    double x;
    char s21_res[10];
    char res[10];
    for (x = -1; x > -1e+100; x *=M_PI) {
        sprintf(s21_res, "%Lf", s21_asin(x));
        sprintf(res, "%Lf", asinl(x));
        ck_assert_pstr_eq(s21_res, res);
        }


#test asin_7
    double x;
    for (x = 1.0; x > S21_EPS_TEST; x /=(0.5*M_PI)) {
        ck_assert_double_lt(fabsl(s21_asin(x) - asinl(x)), S21_EPS_TEST);
    }
    
#test asin_8 
    double x;
  for (x = -1.0; x < 1; x +=0.001) {
        //printf("[%L.20f]\n", x);
        ck_assert_double_lt(fabsl(s21_asin(x) - asinl(x)), S21_EPS_TEST);
    }